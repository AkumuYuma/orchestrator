tosca_definitions_version: tosca_simple_yaml_1_0

imports:
  - indigo_custom_types: https://raw.githubusercontent.com/indigo-dc/tosca-types/master/custom_types.yaml

description: >
  TOSCA examples for specifying Chronos and Marathon jobs to enable the
  specification of applications and services in INDIGO.
   
topology_template:

  inputs:
    command:
      type: string
      description: Protocol that will be used to upload the output generated by the job
      required: false
      default: '/bin/bash run.sh'

  node_templates:

    chronos_job:
      type: tosca.nodes.indigo.Container.Application.Docker.Chronos
      properties:
        schedule: 'R0//PT2S'
        description: 'Execute app'
        #command: /bin/bash env #fails!
        command: env
        uris: ['http://a.it','http://b.it']
        retries: 3
        environment_variables:
          INPUT_ONEDATA_SPACE: 'tbd'
      artifacts:
        image:
          file: libmesos/ubuntu
          type: tosca.artifacts.Deployment.Image.Container.Docker
      requirements:
        - host: docker_runtime1

    docker_runtime1:
      type: tosca.nodes.indigo.Container.Runtime.Docker
      capabilities:
        host:
          properties:
            num_cpus: 0.5
            mem_size: 512 MB

    chronos_job_upload:
        type: tosca.nodes.indigo.Container.Application.Docker.Chronos
        properties:
          description: 'Upload output data'
          command: '/bin/bash run.sh'
          retries: 3
          environment_variables:
            ONEDATA_SERVICE_TOKEN: 'TOKEN_TO_BE_SET_BY_THE_ORCHESTRATOR'
            ONEDATA_SPACE: 'DATA_SPACE_TO_BE_SET_BY_THE_ORCHESTRATOR'
            ONEDATA_PATH: 'PATH_TO_BE_SET_BY_THE_ORCHESTRATOR'
            ONEDATA_PROVIDERS: 'ONEDATA_PROVIDERS_TO_BE_SET_BY_THE_ORCHESTRATOR'
        artifacts:
          image:
            file: indigodatacloud/jobuploader
            type: tosca.artifacts.Deployment.Image.Container.Docker